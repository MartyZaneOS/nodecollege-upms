<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nodecollege.cloud.dao.mapper.ChatFriendMapper">
    <resultMap id="BaseResultMap" type="com.nodecollege.cloud.common.model.po.ChatFriend">
        <id column="user_friend_id" jdbcType="BIGINT" property="userFriendId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="friend_id" jdbcType="BIGINT" property="friendId"/>
        <result column="friend_account" jdbcType="VARCHAR" property="friendAccount"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="source" jdbcType="INTEGER" property="source"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
    </resultMap>
    <sql id="Base_Column_List">
    user_friend_id, user_id, friend_id, friend_account, nickname, source, create_time, state
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from chat_friend
        where user_friend_id = #{userFriendId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from chat_friend
    where user_friend_id = #{userFriendId,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.nodecollege.cloud.common.model.po.ChatFriend" keyProperty="userFriendId">
    insert into chat_friend (user_friend_id, user_id, friend_id, friend_account, nickname, source,
      create_time, state)
    values (#{userFriendId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{friendId,jdbcType=BIGINT},
    #{friendAccount,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{source,jdbcType=INTEGER},
    #{createTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER})
  </insert>
    <update id="updateByPrimaryKeySelective">
        update chat_friend
        <set>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
        </set>
        where user_friend_id = #{userFriendId,jdbcType=BIGINT}
    </update>

    <!-- ### 以上代码由MBG + CommentPlugin自动生成, 生成时间: 2020-02-22 20:11:43 ### -->


    <!-- Your codes goes here!!! -->
    <select id="selectFriendList" parameterType="java.util.HashMap"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from chat_friend
        <where>
            <if test="nickname !=null and nickname !=''">
                and nickname like CONCAT('%', CONCAT(#{nickname,jdbcType=VARCHAR}, '%'))
            </if>
            <if test="userId !=null">
                and user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="friendId !=null">
                and friend_id = #{friendId,jdbcType=BIGINT}
            </if>
            <if test="state !=null">
                <if test="state == 0 or state == 1 ">
                    and state in (0, 1)
                </if>
                <if test="state != 0 and state != 1">
                    and state = #{state,jdbcType=INTEGER}
                </if>
            </if>
            <if test="longList!=null and longList.size>0">
                and friend_id in
                <foreach item="_itemType" collection="longList" open="(" separator="," close=")">
                    #{_itemType,jdbcType=BIGINT}
                </foreach>
            </if>
        </where>
        order by nickname
    </select>
</mapper>