<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nodecollege.cloud.dao.mapper.ChatGroupMapper">
  <resultMap id="BaseResultMap" type="com.nodecollege.cloud.common.model.po.ChatGroup">
    <id column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="group_no" jdbcType="BIGINT" property="groupNo" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="notice" jdbcType="VARCHAR" property="notice" />
    <result column="notice_setting" jdbcType="INTEGER" property="noticeSetting" />
    <result column="setting" jdbcType="INTEGER" property="setting" />
    <result column="group_type" jdbcType="INTEGER" property="groupType" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="org_id" jdbcType="BIGINT" property="orgId" />
    <result column="debate_id" jdbcType="BIGINT" property="debateId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>

  <resultMap id="GroupUserResultMap" extends="BaseResultMap" type="com.nodecollege.cloud.common.model.po.ChatGroupUser">
    <result column="group_user_id" jdbcType="BIGINT" property="groupUserId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="group_state" jdbcType="INTEGER" property="groupState" />
  </resultMap>
  <sql id="Base_Column_List">
    g.group_id, g.group_no, g.group_name, g.notice, g.setting, g.notice_setting, g.group_type, g.tenant_id, g.org_id,
    g.create_time, g.update_time, g.state
  </sql>
  <sql id="Group_User_List">
    gu.group_user_id, gu.user_id, gu.nickname, gu.user_type, gu.member_id, gu.group_state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chat_group g
    where g.group_id = #{groupId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from chat_group
    where group_id = #{groupId,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective" parameterType="com.nodecollege.cloud.common.model.po.ChatGroup" keyProperty="groupId">
    insert into chat_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupNo != null">
        group_no,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="notice != null">
        notice,
      </if>
      <if test="noticeSetting != null">
        notice_setting,
      </if>
      <if test="setting != null">
        setting,
      </if>
      <if test="groupType != null">
        group_type,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="groupNo != null">
        #{groupNo,jdbcType=BIGINT},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="notice != null">
        #{notice,jdbcType=VARCHAR},
      </if>
      <if test="noticeSetting != null">
        #{noticeSetting,jdbcType=INTEGER},
      </if>
      <if test="setting != null">
        #{setting,jdbcType=INTEGER},
      </if>
      <if test="groupType != null">
        #{groupType,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="debateId != null">
        #{debateId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective">
    update chat_group
    <set>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="notice != null">
        notice = #{notice,jdbcType=VARCHAR},
      </if>
      <if test="noticeSetting != null">
        notice_setting = #{noticeSetting,jdbcType=INTEGER},
      </if>
      <if test="setting != null">
        setting = #{setting,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where group_id = #{groupId,jdbcType=BIGINT}
  </update>
  
  <!-- ### 以上代码由MBG + CommentPlugin自动生成, 生成时间: 2020-02-16 00:19:51 ### -->



  <!-- Your codes goes here!!! -->
  <select id="selectGroupListByMap" parameterType="java.util.HashMap"
          resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from chat_group g
    <where>
      <![CDATA[ and g.state > -1]]>
      <if test="groupNo != null">
        and g.group_no = #{groupNo,jdbcType=BIGINT}
      </if>
      <if test="groupName != null">
        and g.group_name = #{groupName,jdbcType=VARCHAR}
      </if>
      <if test="type != null">
        and g.group_type = #{type,jdbcType=INTEGER}
      </if>
      <if test="tenantId != null">
        and g.tenant_id = #{tenantId,jdbcType=BIGINT}
      </if>
      <if test="orgId != null">
        and g.org_Id = #{orgId,jdbcType=BIGINT}
      </if>
      <if test="debateId != null">
        and g.debate_id = #{debateId,jdbcType=BIGINT}
      </if>
    </where>
    order by g.update_time desc
  </select>

  <!-- 查询我的群组 -->
  <select id="selectGroupListByGroupUser" parameterType="java.util.HashMap"
          resultMap="GroupUserResultMap">
    select
    <include refid="Base_Column_List"/>,
    <include refid="Group_User_List"/>
    from chat_group g left join chat_group_user gu on g.group_id = gu.group_id
    <where>
      <![CDATA[ and g.state > -1 and gu.state > -1]]>
      <if test="groupNo != null">
        and g.group_no = #{groupNo,jdbcType=BIGINT}
      </if>
      <if test="groupName != null">
        and g.group_name = #{groupName,jdbcType=VARCHAR}
      </if>
      <if test="type != null">
        and g.group_type = #{type,jdbcType=INTEGER}
      </if>
      <if test="userId != null">
        and gu.user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="longList!=null and longList.size>0">
        and g.group_id in
        <foreach item="_itemType" collection="longList" open="(" separator="," close=")">
          #{_itemType,jdbcType=BIGINT}
        </foreach>
      </if>
    </where>
    order by g.update_time desc
  </select>
</mapper>