<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nodecollege.cloud.dao.mapper.ChatRecordMapper">
    <resultMap id="BaseResultMap" type="com.nodecollege.cloud.common.model.po.ChatRecord">
        <id column="record_id" jdbcType="BIGINT" property="recordId"/>
        <result column="send_user_id" jdbcType="BIGINT" property="sendUserId"/>
        <result column="content_type" jdbcType="INTEGER" property="contentType"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="record_type" jdbcType="INTEGER" property="recordType"/>
        <result column="group_id" jdbcType="BIGINT" property="groupId"/>
        <result column="receive_user_id" jdbcType="BIGINT" property="receiveUserId"/>
        <result column="receive_state" jdbcType="INTEGER" property="receiveState"/>
        <result column="send_time" jdbcType="TIMESTAMP" property="sendTime"/>
        <result column="receive_time" jdbcType="TIMESTAMP" property="receiveTime"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
    </resultMap>

    <resultMap id="ChatActiveMap" type="com.nodecollege.cloud.common.model.vo.ChatActiveData">
        <id column="chat_active_id" jdbcType="VARCHAR" property="chatActiveId"/>
        <result column="chat_name" jdbcType="VARCHAR" property="chatName"/>
        <result column="group_id" jdbcType="BIGINT" property="groupId"/>
        <result column="group_type" jdbcType="INTEGER" property="groupType"/>
        <result column="friend_id" jdbcType="BIGINT" property="friendId"/>
        <result column="receive_state" jdbcType="INTEGER" property="receiveState"/>
        <result column="send_user_id" jdbcType="BIGINT" property="sendUserId"/>
        <result column="content_type" jdbcType="INTEGER" property="contentType"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="record_type" jdbcType="INTEGER" property="recordType"/>
        <result column="send_time" jdbcType="TIMESTAMP" property="sendTime"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="news_nwm" jdbcType="INTEGER" property="newsNwm"/>
    </resultMap>
    <sql id="Base_Column_List">
    record_id, send_user_id, content_type, content, record_type, group_id, receive_user_id, receive_state, send_time,
    state, receive_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from chat_record
        where record_id = #{recordId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from chat_record
    where record_id = #{recordId,jdbcType=BIGINT}
  </delete>
    <insert id="insertSelective" parameterType="com.nodecollege.cloud.common.model.po.ChatRecord"
            keyProperty="recordId">
        insert into chat_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="recordId != null">
                record_id,
            </if>
            <if test="sendUserId != null">
                send_user_id,
            </if>
            <if test="contentType != null">
                content_type,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="recordType != null">
                record_type,
            </if>
            <if test="groupId != null">
                group_id,
            </if>
            <if test="receiveUserId != null">
                receive_user_id,
            </if>
            <if test="receiveState != null">
                receive_state,
            </if>
            <if test="sendTime != null">
                send_time,
            </if>
            <if test="state != null">
                state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="recordId != null">
                #{recordId,jdbcType=BIGINT},
            </if>
            <if test="sendUserId != null">
                #{sendUserId,jdbcType=BIGINT},
            </if>
            <if test="contentType != null">
                #{contentType,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="recordType != null">
                #{recordType,jdbcType=INTEGER},
            </if>
            <if test="groupId != null">
                #{groupId,jdbcType=BIGINT},
            </if>
            <if test="receiveUserId != null">
                #{receiveUserId,jdbcType=BIGINT},
            </if>
            <if test="receiveState != null">
                #{receiveState,jdbcType=INTEGER},
            </if>
            <if test="sendTime != null">
                #{sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective">
        update chat_record
        <set>
            <if test="receiveState != null">
                receive_state = #{receiveState,jdbcType=INTEGER},
            </if>
            <if test="receiveTime != null">
                receive_time = #{receiveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
        </set>
        where record_id = #{recordId,jdbcType=BIGINT}
        <if test="receiveState != null">
            and receive_user_id = #{receiveUserId,jdbcType=BIGINT}
        </if>
        <if test="state != null">
            and send_user_id = #{sendUserId,jdbcType=BIGINT}
        </if>
    </update>

    <!-- ### 以上代码由MBG + CommentPlugin自动生成, 生成时间: 2020-02-16 01:02:23 ### -->


    <!-- Your codes goes here!!! -->
    <!-- 查询用户活跃聊天列表 -->
    <select id="getActiveChatList" parameterType="java.lang.Long" resultMap="ChatActiveMap">
    select chat_active_id, max(send_time) send_time
    from (
             select concat('f', r.send_user_id) chat_active_id, max(send_time) send_time
             from chat_record r
             where r.receive_user_id = #{userId,jdbcType=BIGINT} and r.send_user_id = #{userId,jdbcType=BIGINT}
               and record_type = 2
             group by r.send_user_id
             union
             select concat('f', r.send_user_id) chat_active_id, max(send_time) send_time
             from chat_record r
             where r.receive_user_id = #{userId,jdbcType=BIGINT}
               and record_type = 2
             group by r.send_user_id
             union
             select concat('f', r.receive_user_id) chat_active_id, max(send_time) send_time
             from chat_record r
             where r.send_user_id = #{userId,jdbcType=BIGINT}
               and record_type = 2
             group by r.receive_user_id
             union
             select concat('g', r.group_id) chat_active_id, max(r.send_time) send_time
             from chat_record r
                      left join chat_group_user gu on r.group_id = gu.group_id
             where gu.user_id = #{userId,jdbcType=BIGINT}
               and r.record_type = 1
             group by r.group_id
         ) a
    group by chat_active_id
    order by send_time desc
  </select>

    <!--  查询聊天记录  -->
    <select id="selectRecordList" parameterType="java.util.HashMap"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from chat_record
        <where>
            <if test="groupId != null">
                and group_id = #{groupId,jdbcType=BIGINT}
            </if>
            <if test="sendUserId != null and receiveUserId != null">
                and (
                (send_user_id = #{sendUserId,jdbcType=BIGINT} and receive_user_id = #{receiveUserId,jdbcType=BIGINT})
                or
                (send_user_id = #{receiveUserId,jdbcType=BIGINT} and receive_user_id = #{sendUserId,jdbcType=BIGINT})
                )
            </if>
            <if test="sendTime != null">
                <![CDATA[ and send_time <= #{sendTime,jdbcType=TIMESTAMP} ]]>
            </if>
        </where>
        order by send_time desc
    </select>

    <!--  查询朋友最近一次接收消息时间  -->
    <select id="selectFriendMaxReceiveTimeRecord" parameterType="java.util.HashMap"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from chat_record
        <where>
            send_user_id = #{sendUserId,jdbcType=BIGINT}
            and receive_user_id = #{receiveUserId,jdbcType=BIGINT}
            and record_type = 2
            and receive_state = 2
        </where>
        order by receive_time desc
    </select>

    <!--  查询未读消息数量  -->
    <select id="selectChatNewsNum" parameterType="java.util.HashMap"
            resultType="java.lang.Integer">
        select
        count(record_id) news_nwm
        from chat_record
        <where>
            <if test="groupId != null">
                and group_id = #{groupId,jdbcType=BIGINT}
                and record_type = 1
                <![CDATA[ and send_time > #{receiveTime,jdbcType=TIMESTAMP} ]]>
            </if>
            <if test="sendUserId != null and receiveUserId != null">
                and send_user_id = #{sendUserId,jdbcType=BIGINT}
                and receive_user_id = #{receiveUserId,jdbcType=BIGINT}
                and record_type = 2
                and receive_state = 1
                <![CDATA[ and record_id > #{recordId,jdbcType=TIMESTAMP} ]]>
            </if>
            <if test="groupId == null and (sendUserId == null or receiveUserId == null)">
                and 1 = 2
            </if>
        </where>
    </select>
</mapper>